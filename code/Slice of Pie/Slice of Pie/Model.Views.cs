//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsDD88E7F14C7A12C062CB9C10412D295D5F2EACEF0A6B765E24C86C62CB2125FC))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsDD88E7F14C7A12C062CB9C10412D295D5F2EACEF0A6B765E24C86C62CB2125FC : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsDD88E7F14C7A12C062CB9C10412D295D5F2EACEF0A6B765E24C86C62CB2125FC()
        {
            this.EdmEntityContainerName = "Model1Container";
            this.StoreEntityContainerName = "Model1StoreContainer";
            this.HashOverMappingClosure = "248027ff6062ed2fec0473889cfb387851e6447715c0c63d5b0385da95b0aea3";
            this.HashOverAllExtentViews = "1638785157f0cee758cfeb7556e9bc5f976f71f647f6993456509f2d4c9c39b7";
            this.ViewCount = 9;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.UserSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.UserSet", @"
    SELECT VALUE -- Constructing UserSet
        [Model1.Store.UserSet](T3.UserSet_Id, T3.UserSet_Email, T3.UserSet_Password, T3.[UserSet.RootFolder_Id])
    FROM (
        SELECT T1.UserSet_Id, T2.UserSet_Email, T2.UserSet_Password, T1.[UserSet.RootFolder_Id], T2._from0, T1._from1
        FROM  (
            SELECT 
                Key(T.User).Id AS UserSet_Id, 
                Key(T.Folder).Id AS [UserSet.RootFolder_Id], 
                True AS _from1
            FROM Model1Container.UserFolder AS T) AS T1
            INNER JOIN (
            SELECT 
                T.Id AS UserSet_Id, 
                T.Email AS UserSet_Email, 
                T.Password AS UserSet_Password, 
                True AS _from0
            FROM Model1Container.UserSet AS T) AS T2
            ON T1.UserSet_Id = T2.UserSet_Id
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.FolderSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.FolderSet", @"
    SELECT VALUE -- Constructing FolderSet
        [Model1.Store.FolderSet](T1.FolderSet_Id, T1.FolderSet_Name, T1.FolderSet_FolderId)
    FROM (
        SELECT 
            T.Id AS FolderSet_Id, 
            T.Name AS FolderSet_Name, 
            T.FolderId AS FolderSet_FolderId, 
            True AS _from0
        FROM Model1Container.FolderSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.DocumentSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.DocumentSet", @"
    SELECT VALUE -- Constructing DocumentSet
        [Model1.Store.DocumentSet](T1.DocumentSet_Id, T1.DocumentSet_Name, T1.DocumentSet_Path, T1.DocumentSet_CreationTime, T1.DocumentSet_DocumentId, T1.DocumentSet_FolderId)
    FROM (
        SELECT 
            T.Id AS DocumentSet_Id, 
            T.Name AS DocumentSet_Name, 
            T.Path AS DocumentSet_Path, 
            T.CreationTime AS DocumentSet_CreationTime, 
            T.DocumentId AS DocumentSet_DocumentId, 
            T.FolderId AS DocumentSet_FolderId, 
            True AS _from0
        FROM Model1Container.DocumentSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1StoreContainer.UserDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1StoreContainer.UserDocument", @"
    SELECT VALUE -- Constructing UserDocument
        [Model1.Store.UserDocument](T1.[UserDocument.User_Id], T1.[UserDocument.Document_Id])
    FROM (
        SELECT 
            Key(T.User).Id AS [UserDocument.User_Id], 
            Key(T.Document).Id AS [UserDocument.Document_Id], 
            True AS _from0
        FROM Model1Container.UserDocument AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.UserSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.UserSet", @"
    SELECT VALUE -- Constructing UserSet
        [Model1.User](T1.User_Id, T1.User_Email, T1.User_Password) WITH 
        RELATIONSHIP(CREATEREF(Model1Container.FolderSet, ROW(T1.UserFolder_Folder_Id),[Model1.Folder]),[Model1.UserFolder],User,Folder) 
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Email AS User_Email, 
            T.Password AS User_Password, 
            True AS _from0, 
            T.RootFolder_Id AS UserFolder_Folder_Id
        FROM Model1StoreContainer.UserSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.FolderSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.FolderSet", @"
    SELECT VALUE -- Constructing FolderSet
        [Model1.Folder](T1.Folder_Id, T1.Folder_Name, T1.Folder_FolderId)
    FROM (
        SELECT 
            T.Id AS Folder_Id, 
            T.Name AS Folder_Name, 
            T.FolderId AS Folder_FolderId, 
            True AS _from0
        FROM Model1StoreContainer.FolderSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.DocumentSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.DocumentSet", @"
    SELECT VALUE -- Constructing DocumentSet
        [Model1.Document](T1.Document_Id, T1.Document_Name, T1.Document_Path, T1.Document_CreationTime, T1.Document_DocumentId, T1.Document_FolderId)
    FROM (
        SELECT 
            T.Id AS Document_Id, 
            T.Name AS Document_Name, 
            T.Path AS Document_Path, 
            T.CreationTime AS Document_CreationTime, 
            T.DocumentId AS Document_DocumentId, 
            T.FolderId AS Document_FolderId, 
            True AS _from0
        FROM Model1StoreContainer.DocumentSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for Model1Container.UserFolder
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.UserFolder", @"
    SELECT VALUE -- Constructing UserFolder
        [Model1.UserFolder](T3.UserFolder_User, T3.UserFolder_Folder)
    FROM (
        SELECT -- Constructing User
            CreateRef(Model1Container.UserSet, row(T2.UserFolder_User_Id), [Model1.User]) AS UserFolder_User, 
            T2.UserFolder_Folder
        FROM (
            SELECT -- Constructing Folder
                T1.UserFolder_User_Id, 
                CreateRef(Model1Container.FolderSet, row(T1.UserFolder_Folder_Id), [Model1.Folder]) AS UserFolder_Folder
            FROM (
                SELECT 
                    T.Id AS UserFolder_User_Id, 
                    T.RootFolder_Id AS UserFolder_Folder_Id, 
                    True AS _from0
                FROM Model1StoreContainer.UserSet AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for Model1Container.UserDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("Model1Container.UserDocument", @"
    SELECT VALUE -- Constructing UserDocument
        [Model1.UserDocument](T3.UserDocument_User, T3.UserDocument_Document)
    FROM (
        SELECT -- Constructing User
            CreateRef(Model1Container.UserSet, row(T2.UserDocument_User_Id), [Model1.User]) AS UserDocument_User, 
            T2.UserDocument_Document
        FROM (
            SELECT -- Constructing Document
                T1.UserDocument_User_Id, 
                CreateRef(Model1Container.DocumentSet, row(T1.UserDocument_Document_Id), [Model1.Document]) AS UserDocument_Document
            FROM (
                SELECT 
                    T.User_Id AS UserDocument_User_Id, 
                    T.Document_Id AS UserDocument_Document_Id, 
                    True AS _from0
                FROM Model1StoreContainer.UserDocument AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
