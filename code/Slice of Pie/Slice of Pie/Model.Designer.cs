//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PieFactoryModel", "Document_ibfk_1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Slice_of_Pie.User), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.Document), true)]
[assembly: EdmRelationshipAttribute("PieFactoryModel", "Documentrevision_ibfk_1", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Slice_of_Pie.Document), "Documentrevision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.Documentrevision), true)]
[assembly: EdmRelationshipAttribute("PieFactoryModel", "Userdocument_ibfk_2", "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Slice_of_Pie.Document), "Userdocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.Userdocument), true)]
[assembly: EdmRelationshipAttribute("PieFactoryModel", "Documentrevision_ibfk_2", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Slice_of_Pie.User), "Documentrevision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.Documentrevision), true)]
[assembly: EdmRelationshipAttribute("PieFactoryModel", "Folder_ibfk_1", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Slice_of_Pie.Folder), "Folder1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.Folder), true)]
[assembly: EdmRelationshipAttribute("PieFactoryModel", "User_ibfk_1", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Slice_of_Pie.Folder), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.User), true)]
[assembly: EdmRelationshipAttribute("PieFactoryModel", "Userdocument_ibfk_3", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Slice_of_Pie.Folder), "Userdocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.Userdocument), true)]
[assembly: EdmRelationshipAttribute("PieFactoryModel", "Userdocument_ibfk_1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Slice_of_Pie.User), "Userdocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Slice_of_Pie.Userdocument), true)]

#endregion

namespace Slice_of_Pie
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PieFactoryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PieFactoryEntities object using the connection string found in the 'PieFactoryEntities' section of the application configuration file.
        /// </summary>
        public PieFactoryEntities() : base("name=PieFactoryEntities", "PieFactoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PieFactoryEntities object.
        /// </summary>
        public PieFactoryEntities(string connectionString) : base(connectionString, "PieFactoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PieFactoryEntities object.
        /// </summary>
        public PieFactoryEntities(EntityConnection connection) : base(connection, "PieFactoryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Documentrevision> Documentrevisions
        {
            get
            {
                if ((_Documentrevisions == null))
                {
                    _Documentrevisions = base.CreateObjectSet<Documentrevision>("Documentrevisions");
                }
                return _Documentrevisions;
            }
        }
        private ObjectSet<Documentrevision> _Documentrevisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder> Folders
        {
            get
            {
                if ((_Folders == null))
                {
                    _Folders = base.CreateObjectSet<Folder>("Folders");
                }
                return _Folders;
            }
        }
        private ObjectSet<Folder> _Folders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Userdocument> Userdocuments
        {
            get
            {
                if ((_Userdocuments == null))
                {
                    _Userdocuments = base.CreateObjectSet<Userdocument>("Userdocuments");
                }
                return _Userdocuments;
            }
        }
        private ObjectSet<Userdocument> _Userdocuments;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documentrevisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentrevisions(Documentrevision documentrevision)
        {
            base.AddObject("Documentrevisions", documentrevision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolders(Folder folder)
        {
            base.AddObject("Folders", folder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Userdocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserdocuments(Userdocument userdocument)
        {
            base.AddObject("Userdocuments", userdocument);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PieFactoryModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="creationTime">Initial value of the creationTime property.</param>
        /// <param name="creatorId">Initial value of the creatorId property.</param>
        public static Document CreateDocument(global::System.Int32 id, global::System.String name, global::System.String path, global::System.DateTime creationTime, global::System.Int32 creatorId)
        {
            Document document = new Document();
            document.id = id;
            document.name = name;
            document.path = path;
            document.creationTime = creationTime;
            document.creatorId = creatorId;
            return document;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime creationTime
        {
            get
            {
                return _creationTime;
            }
            set
            {
                OncreationTimeChanging(value);
                ReportPropertyChanging("creationTime");
                _creationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creationTime");
                OncreationTimeChanged();
            }
        }
        private global::System.DateTime _creationTime;
        partial void OncreationTimeChanging(global::System.DateTime value);
        partial void OncreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 creatorId
        {
            get
            {
                return _creatorId;
            }
            set
            {
                OncreatorIdChanging(value);
                ReportPropertyChanging("creatorId");
                _creatorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creatorId");
                OncreatorIdChanged();
            }
        }
        private global::System.Int32 _creatorId;
        partial void OncreatorIdChanging(global::System.Int32 value);
        partial void OncreatorIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Document_ibfk_1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Document_ibfk_1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Document_ibfk_1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Document_ibfk_1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PieFactoryModel.Document_ibfk_1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Documentrevision_ibfk_1", "Documentrevision")]
        public EntityCollection<Documentrevision> Documentrevisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Documentrevision>("PieFactoryModel.Documentrevision_ibfk_1", "Documentrevision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Documentrevision>("PieFactoryModel.Documentrevision_ibfk_1", "Documentrevision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Userdocument_ibfk_2", "Userdocument")]
        public EntityCollection<Userdocument> Userdocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Userdocument>("PieFactoryModel.Userdocument_ibfk_2", "Userdocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Userdocument>("PieFactoryModel.Userdocument_ibfk_2", "Userdocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PieFactoryModel", Name="Documentrevision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Documentrevision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Documentrevision object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="documentId">Initial value of the documentId property.</param>
        /// <param name="creationTime">Initial value of the creationTime property.</param>
        /// <param name="path">Initial value of the path property.</param>
        /// <param name="editorId">Initial value of the editorId property.</param>
        public static Documentrevision CreateDocumentrevision(global::System.Int32 id, global::System.Int32 documentId, global::System.DateTime creationTime, global::System.String path, global::System.Int32 editorId)
        {
            Documentrevision documentrevision = new Documentrevision();
            documentrevision.id = id;
            documentrevision.documentId = documentId;
            documentrevision.creationTime = creationTime;
            documentrevision.path = path;
            documentrevision.editorId = editorId;
            return documentrevision;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 documentId
        {
            get
            {
                return _documentId;
            }
            set
            {
                OndocumentIdChanging(value);
                ReportPropertyChanging("documentId");
                _documentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("documentId");
                OndocumentIdChanged();
            }
        }
        private global::System.Int32 _documentId;
        partial void OndocumentIdChanging(global::System.Int32 value);
        partial void OndocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime creationTime
        {
            get
            {
                return _creationTime;
            }
            set
            {
                OncreationTimeChanging(value);
                ReportPropertyChanging("creationTime");
                _creationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("creationTime");
                OncreationTimeChanged();
            }
        }
        private global::System.DateTime _creationTime;
        partial void OncreationTimeChanging(global::System.DateTime value);
        partial void OncreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String path
        {
            get
            {
                return _path;
            }
            set
            {
                OnpathChanging(value);
                ReportPropertyChanging("path");
                _path = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("path");
                OnpathChanged();
            }
        }
        private global::System.String _path;
        partial void OnpathChanging(global::System.String value);
        partial void OnpathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 editorId
        {
            get
            {
                return _editorId;
            }
            set
            {
                OneditorIdChanging(value);
                ReportPropertyChanging("editorId");
                _editorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("editorId");
                OneditorIdChanged();
            }
        }
        private global::System.Int32 _editorId;
        partial void OneditorIdChanging(global::System.Int32 value);
        partial void OneditorIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Documentrevision_ibfk_1", "Document")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("PieFactoryModel.Documentrevision_ibfk_1", "Document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("PieFactoryModel.Documentrevision_ibfk_1", "Document").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("PieFactoryModel.Documentrevision_ibfk_1", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("PieFactoryModel.Documentrevision_ibfk_1", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Documentrevision_ibfk_2", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Documentrevision_ibfk_2", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Documentrevision_ibfk_2", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Documentrevision_ibfk_2", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PieFactoryModel.Documentrevision_ibfk_2", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PieFactoryModel", Name="Folder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        public static Folder CreateFolder(global::System.Int32 id, global::System.String name)
        {
            Folder folder = new Folder();
            folder.id = id;
            folder.name = name;
            return folder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> parentFolderId
        {
            get
            {
                return _parentFolderId;
            }
            set
            {
                OnparentFolderIdChanging(value);
                ReportPropertyChanging("parentFolderId");
                _parentFolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parentFolderId");
                OnparentFolderIdChanged();
            }
        }
        private Nullable<global::System.Int32> _parentFolderId;
        partial void OnparentFolderIdChanging(Nullable<global::System.Int32> value);
        partial void OnparentFolderIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Folder_ibfk_1", "Folder1")]
        public EntityCollection<Folder> Folder1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("PieFactoryModel.Folder_ibfk_1", "Folder1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("PieFactoryModel.Folder_ibfk_1", "Folder1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Folder_ibfk_1", "Folder")]
        public Folder Folder2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.Folder_ibfk_1", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.Folder_ibfk_1", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> Folder2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.Folder_ibfk_1", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("PieFactoryModel.Folder_ibfk_1", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "User_ibfk_1", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("PieFactoryModel.User_ibfk_1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("PieFactoryModel.User_ibfk_1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Userdocument_ibfk_3", "Userdocument")]
        public EntityCollection<Userdocument> Userdocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Userdocument>("PieFactoryModel.Userdocument_ibfk_3", "Userdocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Userdocument>("PieFactoryModel.Userdocument_ibfk_3", "Userdocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PieFactoryModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="rootFolderId">Initial value of the rootFolderId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String email, global::System.String password, global::System.Int32 rootFolderId)
        {
            User user = new User();
            user.id = id;
            user.email = email;
            user.password = password;
            user.rootFolderId = rootFolderId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rootFolderId
        {
            get
            {
                return _rootFolderId;
            }
            set
            {
                OnrootFolderIdChanging(value);
                ReportPropertyChanging("rootFolderId");
                _rootFolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rootFolderId");
                OnrootFolderIdChanged();
            }
        }
        private global::System.Int32 _rootFolderId;
        partial void OnrootFolderIdChanging(global::System.Int32 value);
        partial void OnrootFolderIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Document_ibfk_1", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("PieFactoryModel.Document_ibfk_1", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("PieFactoryModel.Document_ibfk_1", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Documentrevision_ibfk_2", "Documentrevision")]
        public EntityCollection<Documentrevision> Documentrevisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Documentrevision>("PieFactoryModel.Documentrevision_ibfk_2", "Documentrevision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Documentrevision>("PieFactoryModel.Documentrevision_ibfk_2", "Documentrevision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "User_ibfk_1", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.User_ibfk_1", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.User_ibfk_1", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.User_ibfk_1", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("PieFactoryModel.User_ibfk_1", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Userdocument_ibfk_1", "Userdocument")]
        public EntityCollection<Userdocument> Userdocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Userdocument>("PieFactoryModel.Userdocument_ibfk_1", "Userdocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Userdocument>("PieFactoryModel.Userdocument_ibfk_1", "Userdocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PieFactoryModel", Name="Userdocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Userdocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Userdocument object.
        /// </summary>
        /// <param name="userId">Initial value of the userId property.</param>
        /// <param name="documentId">Initial value of the documentId property.</param>
        /// <param name="folderId">Initial value of the folderId property.</param>
        public static Userdocument CreateUserdocument(global::System.Int32 userId, global::System.Int32 documentId, global::System.Int32 folderId)
        {
            Userdocument userdocument = new Userdocument();
            userdocument.userId = userId;
            userdocument.documentId = documentId;
            userdocument.folderId = folderId;
            return userdocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                if (_userId != value)
                {
                    OnuserIdChanging(value);
                    ReportPropertyChanging("userId");
                    _userId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userId");
                    OnuserIdChanged();
                }
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 documentId
        {
            get
            {
                return _documentId;
            }
            set
            {
                if (_documentId != value)
                {
                    OndocumentIdChanging(value);
                    ReportPropertyChanging("documentId");
                    _documentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("documentId");
                    OndocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _documentId;
        partial void OndocumentIdChanging(global::System.Int32 value);
        partial void OndocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 folderId
        {
            get
            {
                return _folderId;
            }
            set
            {
                OnfolderIdChanging(value);
                ReportPropertyChanging("folderId");
                _folderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("folderId");
                OnfolderIdChanged();
            }
        }
        private global::System.Int32 _folderId;
        partial void OnfolderIdChanging(global::System.Int32 value);
        partial void OnfolderIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Userdocument_ibfk_2", "Document")]
        public Document Document
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("PieFactoryModel.Userdocument_ibfk_2", "Document").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("PieFactoryModel.Userdocument_ibfk_2", "Document").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Document> DocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Document>("PieFactoryModel.Userdocument_ibfk_2", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Document>("PieFactoryModel.Userdocument_ibfk_2", "Document", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Userdocument_ibfk_3", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.Userdocument_ibfk_3", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.Userdocument_ibfk_3", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PieFactoryModel.Userdocument_ibfk_3", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("PieFactoryModel.Userdocument_ibfk_3", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PieFactoryModel", "Userdocument_ibfk_1", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Userdocument_ibfk_1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Userdocument_ibfk_1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PieFactoryModel.Userdocument_ibfk_1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PieFactoryModel.Userdocument_ibfk_1", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
